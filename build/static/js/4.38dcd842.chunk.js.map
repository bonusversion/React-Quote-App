{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","data","onAddedComment","quoteId","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","form","onSubmit","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","addCommentHandler","useCallback","a","LoadingSpinner","length","onClick","HighlightedQuote","quote","author","QuoteDetail","getSingleQuote","loadedQuote","match","useRouteMatch","path","exact","url"],"mappings":"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","file":"static/js/4.38dcd842.chunk.js","sourcesContent":["import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { useEffect, useRef } from \"react\";\nimport { addComment } from \"../../lib/api\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, data, error } = useHttp(addComment);\n\n  const { onAddedComment, quoteId } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) onAddedComment();\n  }, [onAddedComment, status, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../lib/api\";\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    data: loadedComments,\n    status,\n    error,\n  } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(async () => {\n    await sendRequest(quoteId);\n    setIsAddingComment(false);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onAddedComment={addCommentHandler} quoteId={quoteId} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import {\n  useParams,\n  Route,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Fragment, useEffect } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { getSingleQuote } from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\n// const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Max\",\n//     text: \"Learning React is fun!\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Bon\",\n//     text: \"Learning React is great!\",\n//   },\n// ];\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"error\") {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p className=\"centered\">No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link to={`${match.url}/comments`} className=\"btn--flat\">\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}